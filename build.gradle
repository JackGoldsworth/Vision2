import org.jetbrains.gradle.ext.*

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.31'
    id "org.sonarqube" version "2.7"
    id 'groovy'
    id "org.jetbrains.gradle.plugin.idea-ext" version "0.7"
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id 'application'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id "com.moowork.node" version "1.3.1"
}

apply plugin: "com.moowork.node"

group 'me.jackgoldsworth.webapp'
version '0.1'
ext.ktorversion = "1.3.0"
mainClassName = 'me.jackgoldsworth.webapp.Application'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.springframework.boot:spring-boot-starter-web:2.2.4.RELEASE'
    implementation 'org.json:json:20180813'
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'org.springframework:spring-websocket:5.2.5.RELEASE'
    implementation 'org.springframework:spring-messaging:5.2.5.RELEASE'
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:2.1.0'
    implementation 'com.google.cloud:google-cloud-speech:1.13.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.1.51'
    implementation "org.reflections:reflections:0.9.12"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sonarqube {
    properties {
        property "sonar.projectName", "Vision2"
        property "sonar.projectKey", "me.jackgoldsworth.vision"
        property "sonar.links.homepage", "https://github.com/JackGoldsworth/Vision2"
        property "sonar.links.ci", "https://travis-ci.com/JackGoldsworth/Vision2"
        property "sonar.links.scm", "https://github.com/JackGoldsworth/Vision2"
        property "sonar.links.issue", "https://github.com/JackGoldsworth/Vision2/issues"
    }
}

idea {
    project {
        settings {
            runConfigurations {
                "Run Web-App"(Gradle) {
                    taskNames = ["buildReact", "bootRun"]
                    projectPath = file("Vision2").parentFile.absolutePath
                }
            }
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'me.jackgoldsworth.webapp.Application'
    }
}

node {
    download = true
    workDir = file("${project.buildDir}/front-end/")
    nodeModulesDir = file("${project.projectDir}/front-end/node_modules/")
}

task buildReact(type: NpmTask) {
    args = ['run', 'webpack']
}

buildReact.dependsOn(npm_install)

clean.delete << file('node_modules')